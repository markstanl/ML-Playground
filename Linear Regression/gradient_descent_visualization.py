import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# NOTE THIS IS ENTIRELY GENERATED BY CHATGPT TO HELP VISUALIZE THE GRADIENT DESCENT

# Generate sample data
X = np.array([1, 2, 3, 4, 5])
y = np.array([1, 3, 3, 2, 5])

# Define a function to calculate the cost
def compute_cost(m, b, X, y):
    n = len(y)
    cost = (1/n) * np.sum((m * X + b - y) ** 2)
    return cost

# Create meshgrid for plotting
m_values = np.linspace(-1, 3, 100)
b_values = np.linspace(-1, 3, 100)
M, B = np.meshgrid(m_values, b_values)

# Compute cost values for the meshgrid
Cost = np.array([compute_cost(m, b, X, y) for m, b in zip(np.ravel(M), np.ravel(B))])
Cost = Cost.reshape(M.shape)

# Create a 3D plot
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')

# Plot the surface
ax.plot_surface(M, B, Cost, cmap='viridis')

# Labels and title
ax.set_xlabel('Slope (m)')
ax.set_ylabel('Intercept (b)')
ax.set_zlabel('Cost')
ax.set_title('Cost Function Surface')

# Show the plot
plt.show()
